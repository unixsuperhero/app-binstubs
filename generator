#!/bin/bash

if [ -z "$1" -o -z "$2" ]
then
  cat <<USAGE

  USAGE:
    generator <repo_dir> <bin_path>

  EXAMPLE:
    generator ~/github_repos ~/bin

  ARGS:
    <repo_dir>
      A folder containing 1+ git repos.

    <bin_path>
      Needs to be a folder in your PATH env.

USAGE

  exit 1
fi

function generate_stub() {
  cat <<BINSTUB >"$1/$2"
#!/bin/bash

export APP_NAME="$2"
export APP_DIR="$3"

\$(dirname \$0)/base-binstub \$@
BINSTUB
}


find $1 -name '.git' | while read app
do
  cd $(dirname $app)

  app_dir=$(pwd)
  app_name=$(basename "${app_dir}")

  echo "Generating binstub for: ${app_name}..."

  generate_stub "$2" "$app_name" "$app_dir"
  chmod +x "$2/$app_name"
done

cat <<INFO
Copying core functionality...

If you plan on removing this folder,
use the cp version of this.

If you plan on keeping it,
use the symlink version.

INFO
  #cp -v "$(dirname $0)/base-binstub" "$2"/
  [[ -r "$2/base-binstub" ]] && rm "$2/base-binstub"
  ln -s "$(dirname $0)/base-binstub" "$2"/

echo 'ensuring binstubs are accessible'
cat <<setpath >>~/.bashrc
export HEROKU_BINSTUB_PATH="$2"
export PATH="\$HEROKU_BINSTUB_PATH:\$PATH"

function bcd() {
  cd \$(\$(ls -1 "\$HEROKU_BINSTUB_PATH" | \
    grep -i "*\$(echo "\$1" | sed 's/./&*/g')" | head -1))
}
setpath

echo "...done"

